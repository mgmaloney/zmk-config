/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        End_Combo {
            bindings = <&kp END>;
            key-positions = <33 34>;
        };

        Home_Combo {
            bindings = <&kp HOME>;
            key-positions = <25 26>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            bindings = <
&kp ESC         &kp N1  &kp N2  &kp N3        &kp N4  &kp N5                                   &kp N6     &kp N7  &kp N8     &kp N9   &kp N0    &kp BACKSPACE
&kp TAB         &kp Q   &kp W   &kp E         &kp R   &kp T                                    &kp Y      &kp U   &kp I      &kp O    &kp P     &kp ENTER
&kp LEFT_SHIFT  &kp A   &kp S   &kp D         &kp F   &kp G                                    &kp H      &kp J   &kp K      &kp L    &kp SEMI  &kp RIGHT_SHIFT
&kp CAPSLOCK    &kp Z   &kp X   &kp C         &kp V   &kp B      &kp LBKT            &kp RBKT  &kp N      &kp M   &kp COMMA  &kp DOT  &kp FSLH  &kp DELETE
                                &kp LEFT_WIN  &mo 1   &kp SPACE  &kp LEFT_CONTROL    &mo 2     &kp SPACE  &mo 1   &mo 3
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        lower_layer {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&kp ESCAPE      &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &none     &none       &none                                                     &kp K_PLAY_PAUSE      &kp K_STOP         &kp K_BACK      &kp K_NEXT    &none            &kp BACKSPACE
&kp TAB         &kp K_MUTE         &none            &none     &kp TILDE   &kp GRAVE                                                 &kp LS(SINGLE_QUOTE)  &kp DOUBLE_QUOTES  &kp MINUS       &kp PLUS      &kp EQUAL        &kp ENTER
&kp LEFT_SHIFT  &kp EXCL           &kp AT           &kp HASH  &kp DOLLAR  &kp PRCNT                                                 &kp CARET             &kp AMPS           &kp ASTRK       &kp LS(SEMI)  &kp QUESTION     &kp RIGHT_SHIFT
&kp CLCK        &none              &none            &none     &none       &kp PIPE   &kp LEFT_PARENTHESIS    &kp RIGHT_PARENTHESIS  &kp UNDER             &kp LEFT           &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &kp DELETE
                                                    &none     &none       &kp SPACE  &none                   &none                  &kp SPACE             &none              &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&none  &none  &none  &none  &none  &none                                     &none  &none     &none  &none  &none    &none
&none  &none  &none  &none  &none  &none                                     &none  &none     &none  &none  &none    &none
&none  &none  &none  &none  &none  &none                                     &none  &none     &none  &none  &none    &none
&none  &none  &none  &none  &none  &none  &kp LESS_THAN    &kp GREATER_THAN  &none  &kp HOME  &none  &none  &kp END  &none
                     &none  &none  &none  &none            &none             &none  &none     &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans
            >;
        };
    };
};
